<style lang="less">
  .weui-media-box__info__meta {
    margin: 0;
    font-size: 12px;
  }
  .topic-info {
    margin-top: 5px;
  }
  .topic-title {
    white-space: normal;
    font-size: 14px;
  }
  .avatar {
    padding: 4px;
    border: 1px solid #ddd;
    border-radius: 4px;
    width: 50px;
    height: 50px;
  }
  .reply-count {
    background-color: #d8d8d8;
    float: right;
  }
</style>
<template>
  <view class="page">
    <view class="page__bd">
      <view class="weui-panel weui-panel_access">
        <view class="weui-panel__hd">动态列表</view>
        <view class="weui-panel__bd">
          <!--<view v-for="trend in this.trends">-->
          <view wx:for="{{trends}}" wx:key="{{index}}">
            <a url="" class="weui-media-box weui-media-box_appmsg" hover-class="weui-cell_active">
              <view class="weui-media-box__bd weui-media-box__bd_in-appmsg">
                <view class="weui-media-box__title trend-title">{{ item.title }}</view>

                <view class="weui-media-box__info trend-info">
                  <view class="weui-media-box__info__meta">{{ item.create_user[0].name}} • </view>
                  <view class="weui-media-box__info__meta">{{ item.created_at }}</view>
                </view>
              </view>
              <!--<view class="weui-badge reply-count">{{ trend.reply_count }}</view>-->
            </a>
          </view>
            <view class="weui-loadmore weui-loadmore_line" v-if="noMoreData">
                <view class="weui-loadmore__tips weui-loadmore__tips_in-line">没有更多数据</view>
            </view>
        </view>
      </view>
    </view>
  </view>
</template>
<script>
    import wepy from '@wepy/core'
    import { getTrends } from '@/utils/trends'

    wepy.page({
      data: {
        // 话题数据
        trends: [],
        // 当前分页
        page: 1,
        // 是否还有更多数据
        noMoreData: false,
        // 是否在加载中
        isLoading: false
        // 如果在请求还未完成时，连续滑动到最底部，会多次触发下拉刷新
        // 所以可以增加一个 isLoading 的标志位，只有一次请求结束以后才允许再次加载。
      },
      async onLoad() {
        this.loadTrends()
      },
      // 停止下拉刷新
      async onPullDownRefresh() {
        this.page = 1
        this.noMoreData = false
        await this.loadTrends(true)
        wx.stopPullDownRefresh()
      },

      async onReachBottom () {
        // 如果没有更多内容，直接返回
        if (this.noMoreData || this.isLoading) {
          return
        }

        this.isLoading = true
        this.page += 1

        await this.loadTrends()

        this.isLoading = false
        // 开始加载数据前，设置 isLoading 为 true，加载完成后，设置为 false
        // 这样，如果处于加载中，则直接返回，不会触发下拉刷新。
      },

      methods: {
        // 获取话题数据
        async loadTrends(reset = false) {
          // 请求话题列表接口
          const trendsResponse = await getTrends({
            page: this.page,
            include: 'user,category'
          })

          // 将数据合并到 this.topics
          this.trends = reset ? trendsResponse.data.data : this.trends.concat(trendsResponse.data.data)

          const pagination = trendsResponse.data.meta

                // 根据分页设置是否还有更多数据
          if (pagination.current_page === pagination.last_page) {
            this.noMoreData = true
          }
        }
      }

    })
</script>
